type ProjectData = record {
  id : text;
  app : text;
  faq : text;
  upvotedBy : vec text;
  taggr : text;
  nftUnitPrice : text;
  twitter : text;
  docs : text;
  logo : text;
  nftMarketEntrepot : text;
  name : text;
  createdAt : text;
  nftSaleUrl : text;
  submittedBy : text;
  description : text;
  nftSaleDate : text;
  catalyze : text;
  funded : text;
  website : text;
  grantee : bool;
  distrikt : text;
  seers : text;
  whitepaper : text;
  updatedAt : text;
  nftStatsNftgeek : text;
  nftMarketYumi : text;
  nuance : text;
  nftMarketCcc : text;
  canister : text;
  nftImg1 : text;
  nftImg2 : text;
  nftImg3 : text;
  nftImg4 : text;
  category : vec text;
  discord : text;
  nftUnits : text;
  nftRarityDgdg : text;
  dscvr : text;
  telegram : text;
  archived : bool;
  github : text;
  openchat : text;
  medium : text;
};
type ProjectProposal = record {
  id : text;
  projectData : ProjectData;
  proposalNumber : nat64;
  proposer : principal;
};
type Test = record { test : text };
service : () -> {
  addCuratedProject : (ProjectData) -> (opt ProjectData);
  addProjectProposal : (ProjectData) -> (opt ProjectProposal);
  addTestItem : (Test) -> (opt Test);
  getProjectProposals : () -> (vec ProjectProposal) query;
  listCuratedProjects : () -> (vec ProjectData) query;
  listTestItems : () -> (vec Test) query;
  whoami : () -> (text) query;
}